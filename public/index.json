[{"content":"Markdown here\n","description":"test post","id":0,"section":"updates","tags":null,"title":"May 2019","uri":"https://ink.magicoder.org/updates/2019_may/"},{"content":"Markdown here\n","description":"test post","id":1,"section":"learn","tags":null,"title":"Basic Usage","uri":"https://ink.magicoder.org/learn/gettingstarted/basicusage/"},{"content":"Markdown here\n","description":"test post","id":2,"section":"updates","tags":null,"title":"April 2019","uri":"https://ink.magicoder.org/updates/2019_april/"},{"content":"Markdown here\n","description":"test post","id":3,"section":"learn","tags":null,"title":"Configuration","uri":"https://ink.magicoder.org/learn/gettingstarted/configuration/"},{"content":"Markdown here\n","description":"test post","id":4,"section":"updates","tags":null,"title":"March 2019","uri":"https://ink.magicoder.org/updates/2019_march/"},{"content":"Markdown here\n","description":"test post","id":5,"section":"learn","tags":null,"title":"Installation","uri":"https://ink.magicoder.org/learn/gettingstarted/installation/"},{"content":"Markdown here\n","description":"test post","id":6,"section":"updates","tags":null,"title":"February 2019","uri":"https://ink.magicoder.org/updates/2019_february/"},{"content":"Markdown here\n","description":"test post","id":7,"section":"learn","tags":null,"title":"Quick Start","uri":"https://ink.magicoder.org/learn/gettingstarted/quickstart/"},{"content":"Markdown here\n","description":"test post","id":8,"section":"updates","tags":null,"title":"January 2019","uri":"https://ink.magicoder.org/updates/2019_january/"},{"content":"1.1.1 最简单的 ink 脚本 The simplest ink script\n最基本的 ink 脚本就是 .ink 文件中的普通文本而已：\nHello, world! 当运行时，它们会输出为内容，然后停止。\n每行文本都会生成新段落。例如：\n1 2 3  Hello, world! Hello? Hello, are you there?   输出的内容看起来与文本一模一样的。\n1.1.2 注释 Comments 通常文件中的所有文本都会输出为内容，除非有特殊标记。\n最简单的语法标记是注释。Ink 支持两种注释方式。它们是方便人们阅读代码用的，而编译器会将它们忽略。\n1 2 3 4 5 6 7 8 9  “你怎么看？”她问。 // 不会被输出的内容… “我无法评论（comment），”我答。 /* …或是无行数行数限制的文本块 */   另一种则是用于提醒作者还要去做什么，会被编译器提醒：\n1  TODO: 这块认真写！   1.1.3 标识 Tags 当引擎运行时，文本会按原样呈现。不过有时我们需要标记一行内容提供额外的信息，告诉游戏该怎么运行。\nink 提供了一个简单的系统，使用井号 # 为内容添加标识。\n一行普通的游戏内文本。 # colour it blue 它们不会被展示在内容中，但可被游戏读取到，以便你按需使用。详见 RunningYourInk 。\n","description":"","id":13,"section":"docs","tags":null,"title":"1.1 内容 Content","uri":"https://ink.magicoder.org/docs/basics/content/"},{"content":"1.2.1 最简单的 ink 选项 可通过文字选项让玩家输入。文字选项用星号 * 标记 。\n如无其他指示，选项会在下一行出现。\n1 2 3  Hello world! *\tHello back! Nice to hear from you!   1 2 3 4 5 6  Hello world 1: Hello back! ▶ 1 Hello back! Nice to hear from you.   默认情况下，选项的文本也会再次输出到内容中。\n1.2.2 不输出文本的选项 Suppressing choice text\n一些游戏文本内容与选项是分开的。在 ink 中，如用方括号 [] 括起来，选项的文本不会输出到内容中。\n1 2 3  Hello world! * [Hello back!] Nice to hear from you!   1 2 3 4 5  Hello world 1: Hello back! ▶ 1 Nice to hear from you.   进阶：混合选项与输出文本 Advanced: mixing choice and output text\n实际上，方括号将选项内容分离，这提供了一种有效率的方式来完成一个分支：\n 在它前面的内容，会成为选项且输出到内容； 在它里面的内容，会成为选项但不会输出到内容； 在它后面的内容，只会输出到内容。  如下：\n1 2 3  Hello world! * Hello [back!] right back to you! Nice to hear from you!   1 2 3 4 5 6  Hello world 1: Hello back! ▶ 1 Hello right back to you! Nice to hear from you.   这在写对话类的选项时非常有用。\n1 2 3  “怎么了？” 我的主人问。 * “我有些累[。”]，”我回应道。 “确实，”他说。“这不太好。”   1 2 3 4 5 6  “怎么了？” 我的主人问。 1: “我有些累。” ▶ 1 “我有些累，”我回应道。 “确实，”他说。“这不太好。”   1.2.3 多重选项 Multiple Choices 让选项真的成为选项，我们要提供更多的选项。我们只需简单地把它们罗列出来：\n1 2 3 4 5 6 7  “怎么了？” 我的主人问。 * “我有些累[。”]，”我回应道。 “确实，”他说。“这不太好。” * “没使，先生！” []我回应道。 “那好。” * “我觉得，这场旅行太糟了[。”]我一点也不想再来一次了。” “啊，”他回应道，不是那种不友好的语气。“我看得出你很沮丧，但明天一切都会好起来的。”   上述的语法标记足以写出一组选项。在真正的游戏里，我们希望玩家进入不同分支的故事线。为了做到这一点我们需要更多的结构。\n","description":"","id":14,"section":"docs","tags":null,"title":"1.2 选项 Choices","uri":"https://ink.magicoder.org/docs/basics/choices/"},{"content":"1.3.1 内容片段被称作结点 Pieces of content are called knots\n为了让游戏有分支，我们需要给内容片段标记上标题。\n这些内容片段叫做“结点”，是 ink 最基本的结构单元。\n1.3.2 写个结点 Writing a knot 结点的开头由两个或更多等号 == 构成，例如 === top_knot === 。\n（右侧等号是可选的，结点标题的名称是不能有空格的单词。注，不支持中文。）\n结点标记下的内容均属于这个结点。\n1 2 3  === back_in_london === // 结点：回到伦敦  我们晚上九点四十五准时到了伦敦。   进阶：从始至终 Advanced: a knottier \u0026ldquo;hello world\u0026rdquo;\n当你启动一个 ink 文件，结点外的内容会被自动运行，而结点不会。因此如果你开篇就是结点，就要告诉游戏从哪开始。我们要用一个跳转箭头 -\u0026gt; ，下一节会具体说明。\n-\u0026gt; top_knot === top_knot === Hello world！ 除此之外，ink 不喜欢“不实在的结尾”（loose end），当识别到时会发出如下的警告：\n1  WARNING: Apparent loose end exists where the flow runs out. Do you need a \u0026#39;-\u0026gt; END\u0026#39; statement, choice or divert? on line 3 of tests/test.ink   运行时则是这样的：\n1  Runtime error in tests/test.ink line 3: ran out of content. Do you need a \u0026#39;-\u0026gt; DONE\u0026#39; or \u0026#39;-\u0026gt; END\u0026#39;?   这样就不会报错了：\n=== top_knot === Hello world！ -\u0026gt; END -\u0026gt; END 同时是作者与编译器的标记，它意味着“故事线到这就结束了”。\n","description":"","id":15,"section":"docs","tags":null,"title":"1.3 结点 Knots","uri":"https://ink.magicoder.org/docs/basics/knots/"},{"content":"1.4.1 结点跳转结点 Knots divert to knots\n你可以用跳转箭头 -\u0026gt; 告诉故事从一个结点到另一个结点。跳转无需用户输入会立即生效。\n=== back_in_london === // 结点：回到伦敦 我们晚上九点四十五准时到了伦敦。 -\u0026gt; hurry_home // 跳转到结点：赶回家 === hurry_home === // 结点：赶回家 我们尽可能的快赶回了在裁缝街的家。 1.4.2 跳转是无感的 Diverts are invisible\n跳转是无缝的，甚至可发生在一句话中：\n=== hurry_home === // 结点：赶回家 我们赶回了在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === as_fast_as_we_could === // 结点：尽可能的快 尽可能的快。 1  我们赶回在裁缝街的家尽可能的快。   1.4.3 胶水 Glue 通常会在每行新内容之间插入换行符。然而某些情况下，内容必须在同一行，可用胶水 \u0026lt;\u0026gt; 将其连接。\n=== hurry_home === // 结点：赶回家 我们赶回 \u0026lt;\u0026gt;// 使用胶水 -\u0026gt; to_savile_row // 跳转到结点：在裁缝街 === to_savile_row === // 结点：在裁缝街 在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === as_fast_as_we_could === // 结点：尽可能的快 \u0026lt;\u0026gt; 尽可能的快。// 使用胶水 1  我们赶回在裁缝街的家尽可能的快。   你不能用过多的胶水：相邻的多个胶水没有额外的效果。（也没办法解除胶水；一旦粘在同一行，就是粘住了。）\n","description":"","id":16,"section":"docs","tags":null,"title":"1.4 跳转 Divert","uri":"https://ink.magicoder.org/docs/basics/diverts/"},{"content":"Branching The Flow\n1.5.1 基础分支 Basic branching 用结点，选项与跳转来组成 choose-your-own 游戏的基础结构。\n=== paragraph_1 === // 结点：第一段 你手握宝剑，站在墙边。 * [打开大门] -\u0026gt; 跳转到结点：第二段 * [破门而入] -\u0026gt; 跳转到结点：第三段 * [转身回家] -\u0026gt; 跳转到结点：第四段 === paragraph_2 === // 结点：第二段 你打开大门，走上小路 …… 1.5.2 分支与合并 Branching and joining 使用跳转，作者可让故事线分支，也能让其再次合并，不会展示给玩家故事线已合并。\n=== back_in_london === // 结点：回到伦敦 我们晚上九点四十五准时到了伦敦。 * “没时间耽误了！”[] 我喊道。 -\u0026gt; hurry_outside // 跳转到结点：赶到外面 * “先生，让我们享受这一刻吧！”[] 我喊道。 我的住人用力敲了下我的脑袋，把我拽到了门外。 -\u0026gt; dragged_outside // 跳转到结点：拽到外面 * [我们赶回家] -\u0026gt; hurry_outside === hurry_outside === // 结点：赶到外面 我们赶回在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === dragged_outside === //结点：拽到外面 他坚持要我们赶回在裁缝街的家 -\u0026gt; as_fast_as_we_could 跳转到结点：尽可能的快 === as_fast_as_we_could === //结点：我们尽快 \u0026lt;\u0026gt; 尽可能的快。 1.5.3 故事线 The story flow 结点与跳转组成创造了最基本的故事线。这个故事线是“扁平的”（flat）—— 没有调用栈（注，编程用语。此处形容复杂），也没有跳转“返回”（returned）。\n在大多数 ink 脚本中，故事线从顶部开始，像意面一样缠绕搅动，最终可喜可贺地到达了 -\u0026gt; END 。\n这种非常宽松的结构可让作者续写，分支，合并，而无需关心结构的走向。无需用样板跟踪分支跳转或任何状态。\n进阶：循环 Advanced: Loops\n你完全可以用跳转创造循环内容，并且 ink 能有些特性，如控制内容自己变化，选项何时可以选择。\n可浏览“可变文本”和“条件选项”章节了解更多。\n看，下面是一个循环，但绝不是一个好循环：\n=== round === and -\u0026gt; round ","description":"","id":17,"section":"docs","tags":null,"title":"1.5 分支 Branching","uri":"https://ink.magicoder.org/docs/basics/branching/"},{"content":"Includes and Stitches\n1.6.1 结点可有子结点 Knots can be subdivided\n随着故事越来越长，在没有其他结构的情况下会越来越乱，难以保持秩序。\n结点可以包括被称为“针脚”的子结点。它们用单个等号 = 标记。\n=== the_orient_express === // 结点：东方快车 = in_first_class // 针脚：头等厢 …… = in_third_class // 针脚：三等厢 …… = in_the_guards_van // 针脚：警务车厢 …… = missed_the_train // 针脚：错过火车 …… 例如可以将场景作结点，里面的事件作为针脚。\n1.6.2 针脚有唯一的名称 Stitches have unique names\n针脚可跳转到它的“位置”（address）。\n* [前往三等厢] -\u0026gt; the_orient_express.in_third_class // 跳转到针脚：东方快车结点，三等厢针脚 * [前往警务车厢] -\u0026gt; the_orient_express.in_the_guards_van //跳转到针脚： 东方快车结点，警务车厢针脚 1.6.3 第一个针脚是默认的 The first stitch is the default\n如果结点内包含针脚，会默认跳转到结点内的第一个针脚。\n1 2 3  * [前往头等厢] “头等厢, 先生。 还有其他地方吗？” -\u0026gt; the_orient_express // 跳转到结点：东方快车   等同于（\u0026hellip;除非我们改变结点内针脚的顺序！）：\n* [前往头等厢] “头等厢, 先生。 还有其他地方吗？” -\u0026gt; the_orient_express.in_first_class // 跳转到针脚：东方快车结点，头等厢 你也可以在针脚的顶部与结点间加入任何内容，但注意此时不会再自动进入第一个针脚。\n=== the_orient_express === // 结点：东方快车 我们上车了，但是去哪？ * [头等厢] -\u0026gt; in_first_class // 跳转到针脚：头等厢 * [二等厢] -\u0026gt; in_second_class //跳转到针脚：三等厢 = in_first_class // ✨ 不会再自动进入第一个针脚 …… = in_second_class // 针脚：三等厢 …… 1.6.4 本地跳转 Local diverts 在结点内部，你无需针脚的完整地址。\n-\u0026gt; the_orient_express // 跳转到结点：东方快车 === the_orient_express === // 结点：东方快车 = in_first_class // 针脚：头等厢 我安顿好我的主人。 * [前往三等厢] -\u0026gt; in_third_class // ✨ 跳转到针脚：三等厢 = in_third_class // 针脚：三等厢 我坐下来了。 这意味着针脚与结点不能共享名称，但不同的结点里可以有相同名称的针脚。（像东方快车与蒙古专列都可以有头等舱。）如你使用了不明确的名称，编译器会发出警告。\n1.6.5 脚本文件可联合 Script files can be combined\n你可用 INCLUDE 语句将内容拆到多个文件里。\nINCLUDE newspaper.ink INCLUDE cities/vienna.ink INCLUDE journeys/orient_express.ink INCLUDE 语句必须在文件顶部，而非结点内部。\n结点跳转到哪个文件并没有限制，换句话说，分割文件并不会影响游戏的命名空间（namespacing） 。\n","description":"","id":18,"section":"docs","tags":null,"title":"1.6 针脚 Stitches","uri":"https://ink.magicoder.org/docs/basics/stitches/"},{"content":"1.7.1 一次性选项 Choices can only be used once\n通常情况下，游戏中的每个选项只能选一次。如果你的故事中没有循环，你很难注意到这个特性。但如果你用了循环，很快你会注意到选项消失了……\n=== find_help === // 结点：需求帮助 你拼命地在人群中寻找一张友好的脸。 * 戴帽子的女人[？] 粗暴地把你推到一边。 -\u0026gt; find_help // 跳转到结点：需求帮助 * 拿公文包的男人[？] 很厌恶的从旁边匆匆而过。 -\u0026gt; find_help // 跳转到结点：需求帮助 你拼命地在人群中寻找一张友好的脸。 1: 戴帽子的女人？ 2: 拿公文包的男人？ ▶ 1 戴帽子的女人粗暴地把你推到一边。 你拼命地在人群中寻找一张友好的脸。 1: 拿公文包的男人？ ▶ 到下一个循环，你就没剩下选项了。\n1.7.2 后备选项 Fallback choices 上面的例子停下了，因为到选项时报错“没有内容了”（ out of content）。\n▶ 1 拿公文包的男人很厌恶的从旁边匆匆而过。 你拼命地在人群中寻找一张友好的脸。 Runtime error in tests/test.ink line 6: ran out of content. Do you need a '-\u0026gt; DONE' or '-\u0026gt; END'? 我们可通过一个“后备选择”解决问题。后备选项不会直接展示给玩家，但当没有其他选项可选时，则会自动选择。\n后备选项是一个简单的“没有文本的选项”：\n* -\u0026gt; out_of_options 并在轻度滥用语法的情况下，我们可以让选项有文本内容，用“选项后加箭头”：\n* -\u0026gt; 姆德一直无法解释他怎么从燃烧的车厢里出来的。 -\u0026gt; season_2 再看看之前的例子：\n=== find_help === // 结点：需求帮助 你拼命地在人群中寻找一张友好的脸。 * 戴帽子的女人[？] 粗暴地把你推到一边。 -\u0026gt; find_help // 跳转到结点：需求帮助 * 拿公文包的男人[？] 很厌恶的从旁边匆匆而过。 -\u0026gt; find_help // 跳转到结点：需求帮助 * -\u0026gt; // ✨ 后备选项 但一切都太迟了：你倒在站台上。一切都结束了。 -\u0026gt; END // ✨ 故事线到此结束 你拼命地在人群中寻找一张友好的脸。 1: 戴帽子的女人？ 2: 拿公文包的男人？ ▶ 1 戴帽子的女人粗暴地把你推到一边。 你拼命地在人群中寻找一张友好的脸。 1: 拿公文包的男人？ ▶ 1 拿公文包的男人很厌恶的从旁边匆匆而过。 你拼命地在人群中寻找一张友好的脸。 但一切都太迟了：你倒在站台上。一切都结束了。 1.7.3 固定选项 Sticky choices 当然，一次性有时不止我们想要的，因此我们有另一种选项：固定选项。固定选项用加号标记 + ，不会因选择而被用尽。\n=== homers_couch === // 结点：霍默沙发 + [再吃个甜甜圈] // ✨ 固定选项 你又吃了一个甜甜圈。 -\u0026gt; homers_couch // 跳转到结点：霍默沙发 * [从沙发起身] 你挣扎着离开了沙发，去拯救世界。 -\u0026gt; END 后备选项也可用固定选项。\n=== conversation_loop // 结点：循环对话 * [聊天气] -\u0026gt; chat_weather * [聊孩子] -\u0026gt; chat_children + -\u0026gt; sit_in_silence_again // ✨ 固定选项 \u0026amp; 固定选项 1.7.4 条件选项 你可以控制选项是否可选。ink 有很多逻辑可用，但最简单的是“玩家是否经历过特定内容”。\n每个结点或针脚在游戏中都有唯一的地址（因此可以跳转到），并且我们可用相同的地址检测玩家是否经历过这块内容。\n* { not visit_paris } [前往巴黎] -\u0026gt; visit_paris // 条件：没有经历过 参观巴黎结点 + { visit_paris } [返回巴黎] -\u0026gt; visit_paris // 条件：经历过 参观巴黎结点 * { visit_paris.met_estelle } [打电话给埃斯特尔女士] -\u0026gt; phone_estelle // 条件：经历过 参观巴黎结点，见到埃斯特尔针脚 注意，一旦玩家经历过结点中的任何针脚，检测结点名称时都会是 true 。\n还要注意，条件选项不会覆盖一次性选项，因此在需要重复时你依然需要固定选项。\n进阶：多重条件 Advanced: multiple conditions\n你也可以让一个选项有多个条件检测；如果这么做了，必须所有的检测都通过才会显示选项。\n* { not visit_paris } [前往巴黎] -\u0026gt; visit_paris // 条件：没有经历过 参观巴黎结点 + { visit_paris } { not bored_of_paris } [返回巴黎] -\u0026gt; visit_paris // 条件：经历过 参观巴黎结点；并且，没经历过 厌倦巴黎结点 逻辑运算符：AND OR Logical operators: AND and OR\n上面的“多重条件”实际上是条件用了编程的 AND 运算符。ink 通常支持 and（或写成 \u0026amp;\u0026amp;）以及 or（或写成 ||），还有括号。\n* { not (visit_paris or visit_rome) \u0026amp;\u0026amp; (visit_london || visit_new_york) } [等等，去哪？我有些困惑。] -\u0026gt; visit_someplace // { 非 （参观巴黎 或 参观罗马） 与 （参观伦敦 或 参观纽约）} ，即“不满足巴黎或罗马至少去过一个，并且伦敦或纽约至少去过一个”。 对于非编程人员而言，X and Y 必须都是 true 才会得到 true。X or Y 其中有一个 true 就是 true 了。我们不支持 xor 运算符。（注，xor 指“异或”，两个值不相同，结果为 true。两个值相同，结果为 false。）\n你也可以用 ! 表示 not 运算符，但考虑到可能与“一次性可变文本” {!text} 混淆，我们推荐使用 not。（注，not 运算如是 true 则得到 false，反之亦然。）\n进阶：结点或针脚标签实际上有计数 Advanced: knot/stitch labels are actually read counts\n* {seen_clue} [指控杰克逊先生] // 条件：经历过 看到线索结点 实际上，条件这里的检测并非 true 或 false，而是整数。结点或针脚有个整数变量，记录玩家经历这个地址的次数。\n如果它不是 0 ，就会在上面得检测返回 true，但你也可更具体些：\n* {seen_clue \u0026gt; 3} [指控杰克逊先生] // 条件：经历过3次以上 看到线索结点 进阶：更多逻辑 Advanced: more logic\nInk 支持的逻辑与条件要比这里多 —— 详见 “变量与逻辑”。\n","description":"","id":19,"section":"docs","tags":null,"title":"1.7 可变选项 Varying Choices","uri":"https://ink.magicoder.org/docs/basics/varying/"},{"content":"1.8.1 文本是可变的 Text can vary\n到目前为止，内容都是静止固定的文本。但在输出时，文本其实也是可变的。\n序列，循环，可变\nSequences, cycles and other alternatives\n最简单的可变文本，是按一定规则从可变内容中选取的。ink 支持很多类型，将内容用大括号括起来 {}，每个可变内容再用竖线 | 隔开。\n当某块内容被多次访问时，这才会有效！\n{可变内容|可变内容|可变内容|可变内容} // 可变文本 1.8.2 可变文本的类型： Types of alternatives\n序列型 Sequences（默认） 序列型可变文本（或“停滞型”）会记录被看到的次数，每被看到，下次就展示下个可变内容。当括号内的所有内容都被看完时，会一直显示最后一个可变内容。\n电台嘶嘶作响。 {“三！”|“二！”|“一！”|传来了爆炸的响声。|这只有些噪声了。} {我用五磅钞票给我买了杯咖啡。|我买了第二杯咖啡给朋友。|我没钱买咖啡了。} 循环型 Cycles（用 \u0026amp; 标记） 循环型像是序列，但它循环显示所有内容 。\n今天是 {\u0026amp;周一|周二|周三|周四|周五|周六|周日}。 一次性型 Once-only（拥 ! 标记） 一次性型也像序列，但当所有可变内容看完时，就不会再显示内容了。（你可将一次性型，看作是最后有一个空白的序列型。）\n他给我讲了个笑话。 {!我有礼貌的笑了。|我微笑了。|我做了下鬼脸。|我不想再做出反应了。} 随机型 Shuffles（用 ~ 标记） 随机型会随机输出可变内容。\n我掷了枚硬币。 {~字面|花面}。 1.8.3 可变内容的特性 可替换内容可以是空白内容。\n我向前迈了一步 {!||||然后灯火熄灭了。 -\u0026gt; eek} // eek：呀，咦(表示害怕或惊讶) 可替换内容可以嵌套。\n这个怪兽{\u0026amp;{没浪费时间|}打|爪}{\u0026amp;你|进你{\u0026amp;的腿|的胳膊|的胸}}。 可替换内容可以有跳转。\n我{在等。|等了一会|打盹了。|醒来又等了会。|放弃并离开了 -\u0026gt; leave_post_office} 可变文本也可用在选项中。\n+ “您好,{\u0026amp;主人|Fogg先生|你|棕眼}!”[] 我喊道。 需要注意，你不能在选项开头就写 { ，这会与条件选项混淆；不过你可在 { 前写上“反斜杠加空格” \\ 。\n+ \\ {\u0026amp;主人|Fogg先生|你|棕眼}!”[] 我喊道。 例子 可变文字可以在循环内使用，让游戏看起来很智能，而无需特别的工作。\n下面是只有一个结点完成的\u0026quot;打地鼠\u0026quot;。我们使用一次性与后备选项，阻止“地鼠逃走”，这样游戏终会结束。\n=== whack_a_mole === {我举起了锤子。|{~没打中！|没有！|不好，它在哪？|啊哈，抓住了！ -\u0026gt; END}} 这个{\u0026amp;地鼠|{\u0026amp;不友好的|可恶的|低级的} {\u0026amp;生物|啮齿动物}} {在某处|藏在某处|仍然逍遥法外|嘲笑我|依旧没打中|注定会失败}。 \u0026lt;\u0026gt; {!我会抓住它！|但这次它逃不掉了！} * [{~打|砸|尝试}左上角] -\u0026gt; whack_a_mole * [{~就是|暴击|猛击}右上角] -\u0026gt; whack_a_mole * [{~砍|锤}中间] -\u0026gt; whack_a_mole * [{~痛击|肯定是}左下角] -\u0026gt; whack_a_mole * [{~掀开|重击}右下角] -\u0026gt; whack_a_mole * -\u0026gt; 你累坏了！地鼠击败了你！ -\u0026gt; END TODO：放个例子\n这里有一些生活建议。注意固定选项 —— 电视的吸引力永远不会消失：\n=== turn_on_television === 我打开电视{一次|两次|三次|更多次}，但电视上 {没啥有意思的东西，所以关上了电视|依旧没什么有意思的东西|比以前更不能吸引我的兴趣了|只有垃圾|演关于鲨鱼的节目我并不喜欢鲨鱼|什么都没有}。 + [再试试] -\u0026gt; turn_on_television * [去外面] -\u0026gt; go_outside_instead === go_outside_instead === -\u0026gt; END 1.8.4 预览：多行可变文本 Sneak Preview: Multiline alternatives\nink 还有另一种格式来写可变文本，详见 multiline blocks\n1.8.5 条件文本 Conditional Text 可替换文本也可使用条件进行逻辑检查，像选项一样。\n{met_blofeld: “我见过他，就一次。” } //\n","description":"","id":20,"section":"docs","tags":null,"title":"1.7 可变文本 Variable Text","uri":"https://ink.magicoder.org/docs/basics/variable/"},{"content":"Markdown here\n","description":"test post","id":21,"section":"learn","tags":null,"title":"Related content","uri":"https://ink.magicoder.org/learn/relatedcontent/"},{"content":"Markdown here\n","description":"test post","id":22,"section":"learn","tags":null,"title":"Page Resources","uri":"https://ink.magicoder.org/learn/pageresources/"},{"content":"Markdown here\n","description":"test post","id":23,"section":"learn","tags":null,"title":"Page Bundles","uri":"https://ink.magicoder.org/learn/pagebundles/"},{"content":"Markdown here\n我爱你\n","description":"test post","id":24,"section":"learn","tags":null,"title":"Content Formats","uri":"https://ink.magicoder.org/learn/contentfortmats/"},{"content":"Markdown here\n","description":"test post","id":25,"section":"learn","tags":null,"title":"Image Processing","uri":"https://ink.magicoder.org/learn/imageprocessing/"},{"content":"Markdown here\n","description":"test post","id":26,"section":"learn","tags":null,"title":"Shortcodes","uri":"https://ink.magicoder.org/learn/contentmanagement/shortcodes/"},{"content":"Markdown here\n","description":"test post","id":27,"section":"learn","tags":null,"title":"Frontmatter","uri":"https://ink.magicoder.org/learn/contentmanagement/frontmatter/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item  First Sub-item Second Sub-item    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"","id":28,"section":"blog","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://ink.magicoder.org/blog/markdown-syntax/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item  First Sub-item Second Sub-item    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":29,"section":"learn","tags":["markdown","css","html","themes"],"title":"Section","uri":"https://ink.magicoder.org/learn/contentmanagement/sections/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\ninhospita parcite confusaque translucet patri vestro qui optatis\nlumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus\nsilentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria\ntractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra\ndicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere\nfurit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli\nLelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare\nEchionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert\nausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae\nvulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem\nPropoetides parte.\n","description":"","id":30,"section":"blog","tags":["markdown","text"],"title":"Placeholder Text","uri":"https://ink.magicoder.org/blog/placeholder-text/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nEmoji can be enabled in a Hugo project in a number of ways.\n The emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"","id":31,"section":"blog","tags":["emoji"],"title":"Emoji Support","uri":"https://ink.magicoder.org/blog/emoji-support/"}]