[
{
	"uri": "https://ink.magicoder.org/",
	"title": "欢迎",
	"tags": [],
	"description": "",
	"content": "Ink 中文指南 创作 互动小说 / 文字冒险游戏 像写 Markdown 一样容易！\nInk, Inky, 以及 Ink-unity 是 inkle 以 MIT 协议开源的\n\r\r这是什么\r\r\r获取 Inky\r\r\r快速上手\r\r\r\rCode Radio\r\r\r支持我们\r\r 📢 Sponsors（虚位以待，以下为示例内容）  👨‍🚀 夸克，年轻人更爱用的智能搜索 支持我们，在这写上你的网址或名字  "
},
{
	"uri": "https://ink.magicoder.org/first/",
	"title": "欢迎回来",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://ink.magicoder.org/first/first-content/",
	"title": "测试",
	"tags": [],
	"description": "",
	"content": "有什么呢？\n"
},
{
	"uri": "https://ink.magicoder.org/learn/",
	"title": "快速上手",
	"tags": [],
	"description": "",
	"content": "学到什么  基础语法，怎么用 Ink 讲一个简单的故事； 导出网页，轻松分享你的故事给好友们游玩； 网页专属，让故事更像互动小说或文字冒险游戏。  需要什么 这是为刚到新手村的玩家准备的。\n 无需了解编程，有一颗有充满热情的心最佳； 一台你能用的电脑，用它将你想法“编成”现实。  能做什么 以文本为主的互动小说或文字冒险游戏，支持逻辑与变量，插图播放声音。如经典的生命线系列游戏，让读者玩家在海量文本与选择中徘徊，决定故事的走向。\n\r\r🔎 展开 生命线系列…\r\r\r 《生命线 Lifeline》是一款文字冒险游戏。由于飞船坠毁，导致宇航员泰勒（Taylor）被困在这里，而他的同僚不是失踪就是已经阵亡，于是玩家成为他求生的唯一希望。玩家在游戏中会以实时通讯的形式进行游戏，玩家会与泰勒来回发送信息进行沟通，帮助他解决各种难题。并可以选择剧情分支，指引泰勒在这个陌生的星球上进行探险。\n \r 但如果你想做的是视觉小说，有大量的立绘与插图，复杂的视觉演出效果，类似于橙光等等。那么本教程可能就不太适合你了，因为只靠 Ink 很难满足这些需求。推荐你试试看 RenPy 这类视觉小说引擎（visual novel engine），更容易实现你的想法。（事实上，Ink 可与 Unity 联合，做出更复杂的游戏 —— 不过这已超出“快速上手”的范围了，故不再赘述。）\n “用最容易的方式创作，用最简单的形式呈现。” —— 似乎有些道理\n  👉 准备好就进入下一节开始我们的学习吧，在 MAGICODER.ORG 一切教程都是免费的。如你觉得本教程有用，不如给你的故事加个有趣的“狼头人” NPC 吧 —— 当然，这是在我们学完教程后的事了。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/",
	"title": "基础 Basics",
	"tags": [],
	"description": "",
	"content": "Ink 中文文档 ink 是一门围绕标记纯文本展开的脚本语言，以生成互动脚本。\n最简单的，它能让你写出一个 Choose Your Own 风格的故事，或有分支的对话树。但它真正的优势在于大量选项的复杂对话，以及大量故事线的编组。\nink 提供了一些特性能让非技术人员也能随心分支，写好每一个分支的后续，同时搞定主线与支线，而不必手忙脚乱。故事线则尽可能地以声明式描述。（注，声明式是告诉机器“做什么 what to do”，与其相对的命令式则是告诉机器“怎么做 how to do”。）\nink 的目标是让一切清新有逻辑地排序，“用眼”就能检查每条对话分支。\n它在设计时也考虑了想法在头脑中思考的过程，因此编写一个故事线是非常快的。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/",
	"title": "中文文档",
	"tags": [],
	"description": "",
	"content": "Ink 中文文档 ink 是一门围绕标记纯文本展开的脚本语言，以生成互动脚本。\n最简单的，它能让你写出一个 Choose Your Own 风格的故事，或有分支的对话树。但它真正的优势在于大量选项的复杂对话，以及大量故事线的编组。\nink 提供了一些特性能让非技术人员也能随心分支，写好每一个分支的后续，同时搞定主线与支线，而不必手忙脚乱。故事线则尽可能地以声明式描述。（注，声明式是告诉机器“做什么 what to do”，与其相对的命令式则是告诉机器“怎么做 how to do”。）\nink 的目标是让一切清新有逻辑地排序，“用眼”就能检查每条对话分支。\n它在设计时也考虑了想法在头脑中思考的过程，因此编写一个故事线是非常快的。\n"
},
{
	"uri": "https://ink.magicoder.org/fourth/",
	"title": "资源索引",
	"tags": [],
	"description": "",
	"content": "Chapter X Some Chapter title Lorem Ipsum.\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/content/",
	"title": "内容 Content",
	"tags": [],
	"description": "",
	"content": "1.1.1 最简单的 ink 脚本 The simplest ink script\n最基本的 ink 脚本就是 .ink 文件中的普通文本而已：\nHello, world! 当运行时，它们会输出为内容，然后停止。\n每行文本都会生成新段落。例如：\nHello, world! Hello? Hello, are you there? 输出的内容看起来与文本一模一样的。\n 1.1.2 注释 Comments 通常文件中的所有文本都会输出为内容，除非有特殊标记。\n最简单的语法标记是注释。Ink 支持两种注释方式。它们是方便人们阅读代码用的，而编译器会将它们忽略。\n“你怎么看？”她问。 // 不会被输出的内容… “我无法评论（comment），”我答。 /* …或是无行数行数限制的文本块 */ 另一种则是用于提醒作者还要去做什么，会被编译器提醒：\nTODO: 这块认真写！  1.1.3 标识 Tags 当引擎运行时，文本会按原样呈现。不过有时我们需要标记一行内容提供额外的信息，告诉游戏该怎么运行。\nink 提供了一个简单的系统，使用井号 # 为内容添加标识。\n一行普通的游戏内文本。 # colour it blue 它们不会被展示在内容中，但可被游戏读取到，以便你按需使用。详见 RunningYourInk 。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/choices/",
	"title": "选项 Choices",
	"tags": [],
	"description": "",
	"content": "1.2.1 最简单的 ink 选项 可通过文字选项让玩家输入。文字选项用星号 * 标记 。\n如无其他指示，选项会在下一行出现。\nHello world! *\tHello back! Nice to hear from you! Hello world 1: Hello back! ▶ 1 Hello back! Nice to hear from you. 默认情况下，选项的文本也会再次输出到内容中。\n 1.2.2 不输出文本的选项 Suppressing choice text\n一些游戏文本内容与选项是分开的。在 ink 中，如用方括号 [] 括起来，选项的文本不会输出到内容中。\nHello world! * [Hello back!] Nice to hear from you! Hello world 1: Hello back! ▶ 1 Nice to hear from you. 进阶：混合选项与输出文本 Advanced: mixing choice and output text\n实际上，方括号将选项内容分离，这提供了一种有效率的方式来完成一个分支：\n 在它前面的内容，会成为选项且输出到内容； 在它里面的内容，会成为选项但不会输出到内容； 在它后面的内容，只会输出到内容。  如下：\nHello world! * Hello [back!] right back to you! Nice to hear from you! Hello world 1: Hello back! ▶ 1 Hello right back to you! Nice to hear from you. 这在写对话类的选项时非常有用。\n“怎么了？” 我的主人问。 * “我有些累[。”]，”我回应道。 “确实，”他说。“这不太好。” “怎么了？” 我的主人问。 1: “我有些累。” ▶ 1 “我有些累，”我回应道。 “确实，”他说。“这不太好。”  1.2.3 多重选项 Multiple Choices 让选项真的成为选项，我们要提供更多的选项。我们只需简单地把它们罗列出来：\n“怎么了？” 我的主人问。 * “我有些累[。”]，”我回应道。 “确实，”他说。“这不太好。” * “没使，先生！” []我回应道。 “那好。” * “我觉得，这场旅行太糟了[。”]我一点也不想再来一次了。” “啊，”他回应道，不是那种不友好的语气。“我看得出你很沮丧，但明天一切都会好起来的。” 上述的语法标记足以写出一组选项。在真正的游戏里，我们希望玩家进入不同分支的故事线。为了做到这一点我们需要更多的结构。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/knots/",
	"title": "结点 Knots",
	"tags": [],
	"description": "",
	"content": "1.3.1 内容片段被称作结点 Pieces of content are called knots\n为了让游戏有分支，我们需要给内容片段标记上标题。\n这些内容片段叫做“结点”，是 ink 最基本的结构单元。\n 1.3.2 写个结点 Writing a knot 结点的开头由两个或更多等号 == 构成，例如 === top_knot === 。\n（右侧等号是可选的，结点标题的名称是不能有空格的单词。注，不支持中文。）\n结点标记下的内容均属于这个结点。\n=== back_in_london === // 结点：回到伦敦  我们晚上九点四十五准时到了伦敦。 进阶：从始至终 Advanced: a knottier \u0026ldquo;hello world\u0026rdquo;\n当你启动一个 ink 文件，结点外的内容会被自动运行，而结点不会。因此如果你开篇就是结点，就要告诉游戏从哪开始。我们要用一个跳转箭头 -\u0026gt; ，下一节会具体说明。\n-\u0026gt; top_knot === top_knot === Hello world！ 除此之外，ink 不喜欢“不实在的结尾”（loose end），当识别到时会发出如下的警告：\nWARNING: Apparent loose end exists where the flow runs out. Do you need a \u0026#39;-\u0026gt; END\u0026#39; statement, choice or divert? on line 3 of tests/test.ink 运行时则是这样的：\nRuntime error in tests/test.ink line 3: ran out of content. Do you need a \u0026#39;-\u0026gt; DONE\u0026#39; or \u0026#39;-\u0026gt; END\u0026#39;? 这样就不会报错了：\n=== top_knot === Hello world！ -\u0026gt; END -\u0026gt; END 同时是作者与编译器的标记，它意味着“故事线到这就结束了”。\n"
},
{
	"uri": "https://ink.magicoder.org/learn/get-inky/",
	"title": "准备 Inky",
	"tags": [],
	"description": "",
	"content": "获取 Inky Ink 是一门讲故事的“语言”。\n我们要用 Ink 语言的官方编辑器 Inky 进行创作，这只需简单的3步：\n \r\r下载最新版 Inky\r\r，支持 Windows，macOS，Linux ； 解压下载好的压缩包到合适的位置； 以 Windows 为例，双击运行 Inky.exe 。  你会发现，Inky 直接启动就绪了 —— 是款免安装的“绿色软件”，这也是为什么本节标题不叫“安装 Inky”的原因。\n\r\r🔎 展开 Inky 界面…\r\r\r\r Inky 是左右双栏的编辑器，在左栏编辑攥写，在右栏实时预览。此时 Inky 在左栏已预置了些内容（虽然不是 Hello World），你可以随意编辑试试写写看；并点击右栏里的预览看看会发生什么。\n\r\r🔎 展开 预置内容…\r\r\rOnce upon a time... * There were two choices. * There were four lines of content. - They lived happily ever after. -\u0026gt; END 曾几何时… * 有两个选择。 * 有四行内容。 - 从此他们过着幸福的生活。 -\u0026gt; END //剧终 \r\r Github 下载慢？ / Gitee 镜像\n\r 认识 Inky 本页面介绍的 Inky 版本是 V0.12\n\r菜单栏 这里虽然有7个菜单按钮，一般我们只会用到 File 菜单来新建、打开、保存、导出工程。具体用法会在后面用到时细说。\n\r\r🔎 展开 菜单说明…\r\r\r File：新建、打开、保存、导出工程等； Edit：撤销、重做，剪切、复制、粘贴、全选，快捷键说明； View：全屏，主题（明暗），缩放文本； Story：【待补充】； Ink：输入语法模板； Window：控制窗口，开发模式等； Help：文档，关于。  \r 编辑区 让我们先看看，\n  编辑区↖左上方：三线菜单展开文件浏览；两个左右三角箭头可帮你切换光标的历史位置，这对编辑较长的故事时很有用。\n  编辑区⬆正上方：状态栏，通常用来提醒你编辑器检查到语法错误警告信息（不要害怕它们，能让实时检测语法错误会很有帮助的；以及 Ink 语法很简单，处理大多数问题也很容易）。\n  编辑区↗右上方：单箭头是后退，双箭头是重启，这在你预览故事时很有用，比如后退到上一个选择选别的选项试试。\n  编辑区左侧是编辑区，右侧是预览区，当我们在左侧编辑攥写内容时，右侧就能实时预览读者玩家看到的内容，并可能游玩体验非常方便。\n常用快捷键：撤销 = Ctrl+Z ；寻找 = Ctrl+F ，替换 = Ctrl+H ；跳转 = Ctrl+P ；注释 = Ctrl+/ ；多行光标操作 = Ctrl+Alt+↑/↓ ；临时折叠 = Alt+L ；整行移动 = Alt+↑/↓ 。你可在 Edit 菜单中随时查看快捷键用法。\n\r Hello world 学习任何一门理性的编程语言似乎都是从输出 Hello World 开始的，但 Inkl 作为一门讲故事的语言要感性得多。因此，下面就给你一个故事片段让你先试试看，把它复制到 Inky 左侧试试看，你可以随意编辑甚至续写这个故事，看看右侧预览区会有什么变化。\n伦敦，1872年 Phileas Fogg 先生的住所。 -\u0026gt; london === london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航,” 他喊到。 \u0026quot;我们去环游世界！\u0026quot; + “环游世界，先生？” 我大吃一惊。 -\u0026gt; astonished + [点头。] -\u0026gt; nod === astonished === “你在开玩笑！” 我认真地对他说。“你一定是在和我开玩笑，先生。” “我很认真。” + “好吧。” -\u0026gt; ending === nod === 我点了点头，但不相信一个字。 -\u0026gt; ending === ending //这也是节点 # CLASS: end “我们将在八十天内环游地球。” 他很平静地提出了这个近乎疯狂地计划“我们8:25去巴黎。一小时后。” -\u0026gt; END 若你从未接触过编程，左侧编辑区的蓝色字符是否让你有些“望而生畏”？但不要紧张，这实际上是一种类似于 Markdown 的标记语法，非常简单易学，会在后面遇到时教会你。\n那么我们的故事像 Hello World 一样“输出”后是什么样的呢？\r\r查看示例\r\r看起来是个普通，可做选择的故事片段网页而已 —— 可以更有趣些吗？\n  👉 下一节我们会开始学习 Ink 语法。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/diverts/",
	"title": "跳转 Divert",
	"tags": [],
	"description": "",
	"content": "1.4.1 结点跳转结点 Knots divert to knots\n你可以用跳转箭头 -\u0026gt; 告诉故事从一个结点到另一个结点。跳转无需用户输入会立即生效。\n=== back_in_london === // 结点：回到伦敦 我们晚上九点四十五准时到了伦敦。 -\u0026gt; hurry_home // 跳转到结点：赶回家 === hurry_home === // 结点：赶回家 我们尽可能的快赶回了在裁缝街的家。  1.4.2 跳转是无感的 Diverts are invisible\n跳转是无缝的，甚至可发生在一句话中：\n=== hurry_home === // 结点：赶回家 我们赶回了在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === as_fast_as_we_could === // 结点：尽可能的快 尽可能的快。 我们赶回在裁缝街的家尽可能的快。  1.4.3 胶水 Glue 通常会在每行新内容之间插入换行符。然而某些情况下，内容必须在同一行，可用胶水 \u0026lt;\u0026gt; 将其连接。\n=== hurry_home === // 结点：赶回家 我们赶回 \u0026lt;\u0026gt;// 使用胶水 -\u0026gt; to_savile_row // 跳转到结点：在裁缝街 === to_savile_row === // 结点：在裁缝街 在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === as_fast_as_we_could === // 结点：尽可能的快 \u0026lt;\u0026gt; 尽可能的快。// 使用胶水 我们赶回在裁缝街的家尽可能的快。 你不能用过多的胶水：相邻的多个胶水没有额外的效果。（也没办法解除胶水；一旦粘在同一行，就是粘住了。）\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/branching/",
	"title": "分支 Branching",
	"tags": [],
	"description": "",
	"content": "Branching The Flow\n1.5.1 基础分支 Basic branching 用结点，选项与跳转来组成 choose-your-own 游戏的基础结构。\n=== paragraph_1 === // 结点：第一段 你手握宝剑，站在墙边。 * [打开大门] -\u0026gt; 跳转到结点：第二段 * [破门而入] -\u0026gt; 跳转到结点：第三段 * [转身回家] -\u0026gt; 跳转到结点：第四段 === paragraph_2 === // 结点：第二段 你打开大门，走上小路 ……  1.5.2 分支与合并 Branching and joining 使用跳转，作者可让故事线分支，也能让其再次合并，不会展示给玩家故事线已合并。\n=== back_in_london === // 结点：回到伦敦 我们晚上九点四十五准时到了伦敦。 * “没时间耽误了！”[] 我喊道。 -\u0026gt; hurry_outside // 跳转到结点：赶到外面 * “先生，让我们享受这一刻吧！”[] 我喊道。 我的住人用力敲了下我的脑袋，把我拽到了门外。 -\u0026gt; dragged_outside // 跳转到结点：拽到外面 * [我们赶回家] -\u0026gt; hurry_outside === hurry_outside === // 结点：赶到外面 我们赶回在裁缝街的家 -\u0026gt; as_fast_as_we_could // 跳转到结点：尽可能的快 === dragged_outside === //结点：拽到外面 他坚持要我们赶回在裁缝街的家 -\u0026gt; as_fast_as_we_could 跳转到结点：尽可能的快 === as_fast_as_we_could === //结点：我们尽快 \u0026lt;\u0026gt; 尽可能的快。  1.5.3 故事线 The story flow 结点与跳转组成创造了最基本的故事线。这个故事线是“扁平的”（flat）—— 没有调用栈（注，编程用语。此处形容复杂），也没有跳转“返回”（returned）。\n在大多数 ink 脚本中，故事线从顶部开始，像意面一样缠绕搅动，最终可喜可贺地到达了 -\u0026gt; END 。\n这种非常宽松的结构可让作者续写，分支，合并，而无需关心结构的走向。无需用样板跟踪分支跳转或任何状态。\n进阶：循环 Advanced: Loops\n你完全可以用跳转创造循环内容，并且 ink 能有些特性，如控制内容自己变化，选项何时可以选择。\n可浏览“可变文本”和“条件选项”章节了解更多。\n看，下面是一个循环，但绝不是一个好循环：\n=== round === and -\u0026gt; round "
},
{
	"uri": "https://ink.magicoder.org/learn/comments-todo/",
	"title": "注释 Todo",
	"tags": [],
	"description": "",
	"content": "注释 Comments 学 Ink 前肯定要先学注释 Comments 的。\n因为注释是人机交流中，我们与人或自己的交流方式…… 说人话就是你总得看懂这行代码是什么意思吧？比如你终于写完了一个百万长篇，回到开头一看“咦，这里我为啥这样写？”；或者你和小伙伴一起写故事，有个片段是你的伏笔，不想被小伙伴改，你就的注释上一句，“这段话是伏笔不要动。”\n✨ 在 Ink 中，用两个斜杠 // 表示这行后面都是注释，用 /* */ 表示这一段都是注释。方便起见，你也可按 Ctrl+/ 快速注释内容。\n“你怎么看？” 她问。 // 一行注释 “我无法评论（comment），” 我答。 /* ……或者一段注释 */ 比如在上一节，我就用注释告诉你“这是节点”。\n=== london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航,” 他喊到。 \u0026quot;我们去环游世界！\u0026quot; 也许你会担心，如果把我想的让读者玩家看到了，比如之前说想“写个伏笔”，那怎么办？\n事实上也像我们前面说的，“注释是与人交流的方式”，Inky 作为机器看到你写的 Ink 注释会完全忽略掉。而其他读者看到的是经过 Inky 加工后的网页，自然也不会看到这些注释了。如下图，我们注释的内容都不会出现在预览区。\n✨ 注释不会被 Inky 读取运行，也不会展示给读者玩家。\n你在哪里最常见到双斜杠，网址对吧？如 https://ink.magicoder.org/learn 。为了让你的网址不会一半变成注释，你需要转义字符，将 // 输入为 \\/\\/ ，例 https:\\/\\/ink.magicoder.org/learn 。我会在后面用到链接的地方再贴心的提醒一次。\n\rLet\u0026rsquo;s Do 👨‍💻 深夜，你独自走在回家的路上。前面的路口好像有什么东西在动… 好像，好像是一头……可怕的， 狼！是狼啊！  深夜独自一人在路上遇到狼真是太吓人了。哼…不能让它得逞吓到更多读者玩家！\n 请你用刚学的注释，让“可怕的，”在 Inky 预览区消失。\n\r\r🚧 展开 参考…\r\r\r深夜，你独自走在回家的路上。前面的路口好像有什么东西在动。 好像，好像是一头……//可怕的， 狼！是狼啊！ ✨ 注释在你临时不想让某块代码运行时，也是很有用的。\n\r  Todo Inky 还有一种更强的提醒方式 TODO:  ，能更醒目的提醒你“还要做什么”。如你也有健忘倾向，可多多使用，怎么方便怎么来。\nTODO: 认真写这里！\n  👉 下一节我们开始正式学习 Ink 语法。是的，会依次学习 Ink 的三大件：结点，跳转，选项。\n"
},
{
	"uri": "https://ink.magicoder.org/learn/knots-divert/",
	"title": "结点 跳转 ★",
	"tags": [],
	"description": "",
	"content": "结点 Knots 故事是由一段段剧情构成的，而 Ink 是由一个个结点 Knots 组成的。\n✨ 结点是组成 Ink 最基础的部分，由两个等号 == 加结点名称表示。\n结点左侧至少要有两个等号；结点的名称仅支持英文，不允许有空格，不允许有重复。\n例如，=== london === 或 == london 都是正确的；=== lon don == 或 == 伦敦 是错误的。\n结点标记下的内容均属于这个结点，就像是故事的章节段落一样，放多少字由你自己决定。\n结点的名称类似于前面的注释，不会展示给读者玩家。所以请放心清楚地给结点起名字吧，无需担心剧透的问题。\n=== london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航,” 他喊到。 “我们去环游世界！” Inky 会将已识别的语法标记变为蓝色，提醒你输入正确且便于区分。你在 Inky 中输入的结点变蓝了吗？\n🤔 什么，你说你的 Inky 编辑器和例图不一样 —— 虽然结点变蓝了，但底部多了一行红色报错？预览区也没显示内容，只有个“End of story”？请先记住这两个问题继续学习，我们会在本页靠下的位置为你解答。\n 跳转 Divert 故事的每段剧情之间会有承接过渡，而 Ink 的结点之间则有跳转 divert 串了起来。\n✨ 跳转用跳转箭头（减号和右尖括号） -\u0026gt; 表示，指向结点的名称。\n如，-\u0026gt; london ，表示运行到这要跳转到 结点 london 继续运行。\n跳转是自动完成的，不会告知读者玩家。如下面这段，虽然从开头跳转到了 结点 london ，但读者玩家看起来只像是换了一行而已。\n伦敦，1872年 Phileas Fogg 先生的住所。 -\u0026gt; london //这是跳转 === london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航，” 他喊到。 “我们去环游世界！” Todo 例图\n胶水 Glue 甚至跳转也可以连行都不换，看起来就像一句话那么自然连贯。\n✨ 胶水 glue 可将文本强制连在一起，用左右两个尖括号 \u0026lt;\u0026gt; 表示。\n我们回家\u0026lt;\u0026gt; -\u0026gt; to_savile_row === to_savile_row === 去萨维尔街\u0026lt;\u0026gt; -\u0026gt; as_fast_as_we_could === as_fast_as_we_could === 尽可能的快 Todo 例图\n原本跳转了三次该有三行内容，但在胶水的作用下只有一行了。\n开始结束 END 让我们简单来了解下 Ink 的运行方式把，Ink 会从文件的顶部逐行向下运行，直到结束。\n✨ 特别的，如果你的 Ink 开篇就是结点，那么你必须给它一个初始跳转。\n如下面的 -\u0026gt; top_knot 告诉 Ink 从哪个结点开始。这在测试时也很有帮助，因为你可指定从任何一个结点开始运行。\n✨ 而要结束时，你则要给一个 -\u0026gt; END 标记，告知 Ink 到这里就可以结束了。\n如果 Ink 检测到你的故事运行到某处就没有下文了，却没有 -\u0026gt; END ，它会红色报错 loose end ，这可避免你遗漏某些分支的情。\nTODO：折叠 loose end例图\n-\u0026gt; top_knot //初始跳转 === top_knot === Hello world! -\u0026gt; END 🤔 现在你知到结点那节 —— “底部多了一行红色报错，预览区也没显示内容”的原因了吗？\n  👉 下一节我们学习怎么与读者玩家互动 —— 选项。\n"
},
{
	"uri": "https://ink.magicoder.org/learn/choices-conditions/",
	"title": "选项 条件 ★",
	"tags": [],
	"description": "",
	"content": "选项 Choices 故事是由一段段剧情构成的，而 Ink 是由一个个结点 Knots 组成的。\n✨ 结点是组成 Ink 最基础的部分，由两个等号 == 加结点名称表示。\n结点左侧至少要有两个等号；结点的名称仅支持英文，不允许有空格，不允许有重复。\n例如，=== london === 或 == london 都是正确的；=== lon don == 或 == 伦敦 是错误的。\n结点标记下的内容均属于这个结点，就像是故事的章节段落一样，放多少字由你自己决定。\n结点的名称类似于前面的注释，不会展示给读者玩家。所以请放心清楚地给结点起名字吧，无需担心剧透的问题。\n=== london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航,” 他喊到。 “我们去环游世界！” Inky 会将已识别的语法标记变为蓝色，提醒你输入正确且便于区分。你在 Inky 中输入的结点变蓝了吗？\n🤔 什么，你说你的 Inky 编辑器和例图不一样 —— 虽然结点变蓝了，但底部多了一行红色报错？预览区也没显示内容，只有个“End of story”？请先记住这两个问题继续学习，我们会在本页靠下的位置为你解答。\n 条件 Conditions 故事的每段剧情之间会有承接过渡，而 Ink 的结点之间则有跳转 divert 串了起来。\n✨ 跳转用跳转箭头（减号和右尖括号） -\u0026gt; 表示，指向结点的名称。\n如，-\u0026gt; london ，表示运行到这要跳转到 结点 london 继续运行。\n跳转是自动完成的，不会告知读者玩家。如下面这段，虽然从开头跳转到了 结点 london ，但读者玩家看起来只像是换了一行而已。\n伦敦，1872年 Phileas Fogg 先生的住所。 -\u0026gt; london //这是跳转 === london === //这是节点 Phileas Fogg 先生早早从改革俱乐部回到了家，并乘坐了新型的蒸汽运输机！ “领航，” 他喊到。 “我们去环游世界！” Todo 例图\n胶水 Glue 甚至跳转也可以连行都不换，看起来就像一句话那么自然连贯。\n✨ 胶水 glue 可将文本强制连在一起，用左右两个尖括号 \u0026lt;\u0026gt; 表示。\n我们回家\u0026lt;\u0026gt; -\u0026gt; to_savile_row === to_savile_row === 去萨维尔街\u0026lt;\u0026gt; -\u0026gt; as_fast_as_we_could === as_fast_as_we_could === 尽可能的快 Todo 例图\n原本跳转了三次该有三行内容，但在胶水的作用下只有一行了。\n开始结束 END 让我们简单来了解下 Ink 的运行方式把，Ink 会从文件的顶部逐行向下运行，直到结束。\n✨ 特别的，如果你的 Ink 开篇就是结点，那么你必须给它一个初始跳转。\n如下面的 -\u0026gt; top_knot 告诉 Ink 从哪个结点开始。这在测试时也很有帮助，因为你可指定从任何一个结点开始运行。\n✨ 而要结束时，你则要给一个 -\u0026gt; END 标记，告知 Ink 到这里就可以结束了。\n如果 Ink 检测到你的故事运行到某处就没有下文了，却没有 -\u0026gt; END ，它会红色报错 loose end ，这可避免你遗漏某些分支的情。\nTODO：折叠 loose end例图\n-\u0026gt; top_knot //初始跳转 === top_knot === Hello world! -\u0026gt; END 🤔 现在你知到结点那节 —— “底部多了一行红色报错，预览区也没显示内容”的原因了吗？\n  👉 下一节我们学习怎么与读者玩家互动 —— 选项。\n"
},
{
	"uri": "https://ink.magicoder.org/doc/basics/stitches/",
	"title": "针脚 Stitches",
	"tags": [],
	"description": "",
	"content": "Includes and Stitches\n1.6.1 结点可有子结点 Knots can be subdivided\n随着故事越来越长，在没有其他结构的情况下会越来越乱，难以保持秩序。\n结点可以包括被称为“针脚”的子结点。它们用单个等号 = 标记。\n=== the_orient_express === // 结点：东方快车 = in_first_class // 针脚：头等厢 …… = in_third_class // 针脚：三等厢 …… = in_the_guards_van // 针脚：警务车厢 …… = missed_the_train // 针脚：错过火车 …… 例如可以将场景作结点，里面的事件作为针脚。\n 1.6.2 针脚有唯一的名称 Stitches have unique names\n针脚可跳转到它的“位置”（address）。\n* [前往三等厢] -\u0026gt; the_orient_express.in_third_class // 跳转到针脚：东方快车结点，三等厢针脚 * [前往警务车厢] -\u0026gt; the_orient_express.in_the_guards_van //跳转到针脚： 东方快车结点，警务车厢针脚  1.6.3 第一个针脚是默认的 The first stitch is the default\n如果结点内包含针脚，会默认跳转到结点内的第一个针脚。\n* [前往头等厢] “头等厢, 先生。 还有其他地方吗？” -\u0026gt; the_orient_express // 跳转到结点：东方快车 等同于（\u0026hellip;除非我们改变结点内针脚的顺序！）：\n* [前往头等厢] “头等厢, 先生。 还有其他地方吗？” -\u0026gt; the_orient_express.in_first_class // 跳转到针脚：东方快车结点，头等厢 你也可以在针脚的顶部与结点间加入任何内容，但注意此时不会再自动进入第一个针脚。\n=== the_orient_express === // 结点：东方快车 我们上车了，但是去哪？ * [头等厢] -\u0026gt; in_first_class // 跳转到针脚：头等厢 * [二等厢] -\u0026gt; in_second_class //跳转到针脚：三等厢 = in_first_class // ✨ 不会再自动进入第一个针脚 …… = in_second_class // 针脚：三等厢 ……  1.6.4 本地跳转 Local diverts 在结点内部，你无需针脚的完整地址。\n-\u0026gt; the_orient_express // 跳转到结点：东方快车 === the_orient_express === // 结点：东方快车 = in_first_class // 针脚：头等厢 我安顿好我的主人。 * [前往三等厢] -\u0026gt; in_third_class // ✨ 跳转到针脚：三等厢 = in_third_class // 针脚：三等厢 我坐下来了。 这意味着针脚与结点不能共享名称，但不同的结点里可以有相同名称的针脚。（像东方快车与蒙古专列都可以有头等舱。）如你使用了不明确的名称，编译器会发出警告。\n 1.6.5 脚本文件可联合 Script files can be combined\n你可用 INCLUDE 语句将内容拆到多个文件里。\nINCLUDE newspaper.ink INCLUDE cities/vienna.ink INCLUDE journeys/orient_express.ink INCLUDE 语句必须在文件顶部，而非结点内部。\n结点跳转到哪个文件并没有限制，换句话说，分割文件并不会影响游戏的命名空间（namespacing） 。\n"
},
{
	"uri": "https://ink.magicoder.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://ink.magicoder.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]